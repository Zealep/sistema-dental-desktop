/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.zealep.vista;

import com.zealep.modelo.Pago;
import com.zealep.modelo.Tratamiento;
import com.zealep.modelo.TratamientoDetalle;
import com.zealep.negocio.TratamientoDAO;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Proysym01
 */
public class DialogTratamientos extends javax.swing.JDialog {

    TratamientoDAO tratamientoDAO = new TratamientoDAO();
    Tratamiento tratamiento = new Tratamiento();
    TableRowSorter trsFiltro;
    public static String llamado;

    public DialogTratamientos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        mostrar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
     
    public void mostrar() {

        List<Tratamiento> tratamientos = new ArrayList<>();
        tratamientos = tratamientoDAO.listarTratamientos();
        DefaultTableModel modelo = new DefaultTableModel();
        String[] titulos = {"Id", "Apellidos", "Nombres", "Dni", "Nro Historia", "A.Doctor", "N.Doctor","F.Inicio Pago","NÂ° Meses", "Pago Mensual", "Costo Total", "Dia Pago", "Comentarios", "Estado"};
        modelo.setColumnIdentifiers(titulos);
        Object obj[] = new Object[modelo.getColumnCount()];

        for (int i = 0; i < tratamientos.size(); i++) {
            obj[0] = tratamientos.get(i).getIdTratamiento();
            obj[1] = tratamientos.get(i).getPaciente().getApellidos();
            obj[2] = tratamientos.get(i).getPaciente().getNombres();
            obj[3] = tratamientos.get(i).getPaciente().getDni();
            obj[4] = tratamientos.get(i).getPaciente().getNroHistoria();
            obj[5] = tratamientos.get(i).getDoctor().getApellidos();
            obj[6] = tratamientos.get(i).getDoctor().getNombres();
            obj[7] = tratamientos.get(i).getFechaInicioPago();
            obj[8] = tratamientos.get(i).getMesesTratamiento();
            obj[9] = tratamientos.get(i).getPagoMensual();
            obj[10] = tratamientos.get(i).getMontoTotalConDescuento();
            obj[11] = tratamientos.get(i).getDiaPagar();
            obj[12] = tratamientos.get(i).getComentarios();
            obj[13] = tratamientos.get(i).getEstado();

            modelo.addRow(obj);

        }

        tableTratamiento.setModel(modelo);
        // lblCantidadRegistros.setText("La cantidad de pacientes es: " + String.valueOf(tratamientoDAO.cantidadRegistros));

    }
    void busquedaFiltro() {

        int opcionBuscar = 0;

        if (rbApellidos.isSelected()) {
            opcionBuscar = 1;
        } else if (rbNombres.isSelected()) {
            opcionBuscar = 2;
        } else if (rbDni.isSelected()) {
            opcionBuscar = 3;
        }
        else if (rbFechaRegistro.isSelected()) {
            opcionBuscar = 7;
        }

        trsFiltro.setRowFilter(RowFilter.regexFilter("(?i)" + txtBuscar.getText(), opcionBuscar));

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        panelBuscar = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        rbApellidos = new javax.swing.JRadioButton();
        rbNombres = new javax.swing.JRadioButton();
        rbDni = new javax.swing.JRadioButton();
        txtBuscar = new javax.swing.JTextField();
        btnSeleccionar = new javax.swing.JButton();
        rbFechaRegistro = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTratamiento = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        jMenuItem1.setText("Ver Detalle");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Criterios de busqueda"));

        buttonGroup1.add(rbApellidos);
        rbApellidos.setText("Apellidos");

        buttonGroup1.add(rbNombres);
        rbNombres.setText("Nombres");

        buttonGroup1.add(rbDni);
        rbDni.setText("Dni");

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        btnSeleccionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Agregar_p1.png"))); // NOI18N
        btnSeleccionar.setText("Seleccionar Tratamiento del Paciente");
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbFechaRegistro);
        rbFechaRegistro.setText("Fecha Inicio Pago");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(rbApellidos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbNombres)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbDni)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbFechaRegistro)))
                .addGap(51, 51, 51)
                .addComponent(btnSeleccionar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnSeleccionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbApellidos)
                            .addComponent(rbNombres)
                            .addComponent(rbDni)
                            .addComponent(rbFechaRegistro))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tableTratamiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableTratamiento.setComponentPopupMenu(jPopupMenu1);
        tableTratamiento.setFocusable(false);
        tableTratamiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableTratamientoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableTratamiento);

        javax.swing.GroupLayout panelBuscarLayout = new javax.swing.GroupLayout(panelBuscar);
        panelBuscar.setLayout(panelBuscarLayout);
        panelBuscarLayout.setHorizontalGroup(
            panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscarLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        panelBuscarLayout.setVerticalGroup(
            panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(40, 96, 134));
        jLabel1.setText("Listado de Tratamientos de los Pacientes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(panelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(284, 284, 284)
                        .addComponent(jLabel1)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(panelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        txtBuscar.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(final KeyEvent e) {
                String cadena = (txtBuscar.getText());
                txtBuscar.setText(cadena);
                repaint();
                busquedaFiltro();
            }
        });
        trsFiltro = new TableRowSorter(tableTratamiento.getModel());
        tableTratamiento.setRowSorter(trsFiltro);
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void tableTratamientoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableTratamientoMouseClicked


    }//GEN-LAST:event_tableTratamientoMouseClicked

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed

        int row;
        row = tableTratamiento.convertRowIndexToModel(tableTratamiento.getSelectedRow());
        if (row == -1) {
            JOptionPane.showMessageDialog(rootPane, "Debes de seleccionar un tratamiento");
        } else {
            if (llamado.equals("historial")) {
                DefaultTableModel defaultTableModel = new DefaultTableModel();
               int fila = tableTratamiento.convertRowIndexToModel(tableTratamiento.getSelectedRow());
                defaultTableModel = (DefaultTableModel) tableTratamiento.getModel();
                FrmHistorialPago.txtIdTratamiento.setText(defaultTableModel.getValueAt(fila, 0).toString());
                FrmHistorialPago.txtApellidosPa.setText(defaultTableModel.getValueAt(fila, 1).toString());
                FrmHistorialPago.txtNombresPa.setText(defaultTableModel.getValueAt(fila, 2).toString());
                FrmHistorialPago.txtNroHistoria.setText(defaultTableModel.getValueAt(fila, 4).toString());
                FrmHistorialPago.txtMeses.setText(defaultTableModel.getValueAt(fila, 8).toString());
                FrmHistorialPago.txtPagoMensual.setText(defaultTableModel.getValueAt(fila,9).toString());
                FrmHistorialPago.txtCostoTotal.setText(defaultTableModel.getValueAt(fila, 10).toString());
                FrmHistorialPago.txtDiaPago.setText(defaultTableModel.getValueAt(fila, 11).toString());
                FrmHistorialPago.txtFechaRegistro.setText(defaultTableModel.getValueAt(fila, 7).toString());
            } else if (llamado.equals("pagos")) {
                DefaultTableModel defaultTableModel = new DefaultTableModel();
                int fila = tableTratamiento.convertRowIndexToModel(tableTratamiento.getSelectedRow());
                defaultTableModel = (DefaultTableModel) tableTratamiento.getModel();
                FrmPago.txtIdTratamiento.setText(defaultTableModel.getValueAt(fila, 0).toString());
                FrmPago.txtApellidosPa.setText(defaultTableModel.getValueAt(fila, 1).toString());
                FrmPago.txtNombresPa.setText(defaultTableModel.getValueAt(fila, 2).toString());
                FrmPago.txtDniPa.setText(defaultTableModel.getValueAt(fila, 3).toString());
                FrmPago.txtNroHistoria.setText(defaultTableModel.getValueAt(fila, 4).toString());
                //enviar datos a la tabla detalle de tratamiento
                List<TratamientoDetalle> tratamientoDetalles = new ArrayList<>();
                TratamientoDAO tratamientoDAO = new TratamientoDAO();
                tratamientoDetalles = tratamientoDAO.buscarProcedimientosPorTratamiento(Integer.parseInt(defaultTableModel.getValueAt(fila,0).toString()));
                DefaultTableModel modelo = new DefaultTableModel();
                String[] titulos = {"Nombre","Cantidad","Piezas","Precio"};
                modelo.setColumnIdentifiers(titulos);
                Object obj[] = new Object[modelo.getColumnCount()];

                for (int i = 0; i < tratamientoDetalles.size(); i++) {
                    obj[0] = tratamientoDetalles.get(i).getProcedimiento().getNombre();
                    obj[1] = tratamientoDetalles.get(i).getCantidad();
                    obj[2] = tratamientoDetalles.get(i).getPiezas();
                    obj[3] = tratamientoDetalles.get(i).getPrecio();
                    

                    modelo.addRow(obj);

                }
                FrmPago.tableDetalleTrata.setModel(modelo);

            }
            
            else if (llamado.equals("control")) {
                DefaultTableModel defaultTableModel = new DefaultTableModel();
                int fila = tableTratamiento.convertRowIndexToModel(tableTratamiento.getSelectedRow());
                defaultTableModel = (DefaultTableModel) tableTratamiento.getModel();
                FrmControl.txtIdTratamiento.setText(defaultTableModel.getValueAt(fila, 0).toString());
                FrmControl.txtApellidosPa.setText(defaultTableModel.getValueAt(fila, 1).toString());
                FrmControl.txtNombresPa.setText(defaultTableModel.getValueAt(fila, 2).toString());
                FrmControl.txtDniPa.setText(defaultTableModel.getValueAt(fila, 3).toString());
                FrmControl.txtNroHistoria.setText(defaultTableModel.getValueAt(fila, 4).toString());
                FrmControl.txtDiaPago.setText(defaultTableModel.getValueAt(fila, 11).toString());
                //enviar datos a la tabla detalle de tratamiento
                List<TratamientoDetalle> tratamientoDetalles = new ArrayList<>();
                TratamientoDAO tratamientoDAO = new TratamientoDAO();
                tratamientoDetalles = tratamientoDAO.buscarProcedimientosPorTratamiento(Integer.parseInt(defaultTableModel.getValueAt(fila,0).toString()));
                DefaultTableModel modelo = new DefaultTableModel();
                String[] titulos = {"Nombre","Cantidad","Piezas","Precio"};
                modelo.setColumnIdentifiers(titulos);
                Object obj[] = new Object[modelo.getColumnCount()];

                for (int i = 0; i < tratamientoDetalles.size(); i++) {
                    obj[0] = tratamientoDetalles.get(i).getProcedimiento().getNombre();
                    obj[1] = tratamientoDetalles.get(i).getCantidad();
                    obj[2] = tratamientoDetalles.get(i).getPiezas();
                    obj[3] = tratamientoDetalles.get(i).getPrecio();
                    

                    modelo.addRow(obj);

                }
                FrmControl.tableDetalleTrata.setModel(modelo);

            }
            
            dispose();
        }
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       int row = tableTratamiento.getSelectedRow();
        if(row == -1)
        {
            JOptionPane.showMessageDialog(rootPane, "Debes de seleccionar un tratamiento");
        }
        {DefaultTableModel defaultTableModel = (DefaultTableModel) tableTratamiento.getModel();
       int fila = tableTratamiento.convertRowIndexToModel(tableTratamiento.getSelectedRow());
       int idTratamiento = Integer.parseInt(defaultTableModel.getValueAt(fila,0).toString());
       DialogInfoTratamiento.IDTRATAMIENTO = idTratamiento;
       DialogInfoTratamiento dialogInfoTratamiento = new DialogInfoTratamiento(null, rootPaneCheckingEnabled);
       dialogInfoTratamiento.setLocationRelativeTo(null);
       dialogInfoTratamiento.show();
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogTratamientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogTratamientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogTratamientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogTratamientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogTratamientos dialog = new DialogTratamientos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelBuscar;
    private javax.swing.JRadioButton rbApellidos;
    private javax.swing.JRadioButton rbDni;
    private javax.swing.JRadioButton rbFechaRegistro;
    private javax.swing.JRadioButton rbNombres;
    private javax.swing.JTable tableTratamiento;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
