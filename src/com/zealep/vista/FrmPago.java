/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.zealep.vista;

import com.zealep.modelo.Pago;
import com.zealep.modelo.Tratamiento;
import com.zealep.modelo.TratamientoDetalle;
import com.zealep.negocio.PagoDAO;
import com.zealep.negocio.TratamientoDAO;
import com.zealep.util.PagosPacienteDTO;
import static com.zealep.vista.FrmTratamiento.txtApellidosDoc;
import static com.zealep.vista.FrmTratamiento.txtApellidosPa;
import static com.zealep.vista.FrmTratamiento.txtDniPa;
import static com.zealep.vista.FrmTratamiento.txtIdDoctor;
import static com.zealep.vista.FrmTratamiento.txtIdPaciente;
import static com.zealep.vista.FrmTratamiento.txtNombresDoc;
import static com.zealep.vista.FrmTratamiento.txtNombresPa;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author user
 */
public class FrmPago extends javax.swing.JInternalFrame {

    PagoDAO pagoDAO = new PagoDAO();
    Pago pago = new Pago();
    String accion = "";
    TableRowSorter trsFiltro;

    public FrmPago() {
        initComponents();
        mostrar();
        inhabilitar();
        lblIdPago.setVisible(false);
        lblIdTratamiento.setVisible(false);
        txtIdPago.setVisible(false);
        txtIdTratamiento.setVisible(false);
        lblDiaPago.setVisible(false);
        txtDiaPago.setVisible(false);
        lblUltimaCuota.setVisible(false);
        txtUltimaCuota.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //METODOS 
    public void mostrar() {

        List<Pago> pagos = new ArrayList<>();
        pagos = pagoDAO.listarPagos();
        DefaultTableModel modelo = new DefaultTableModel();
        String[] titulos = {"Id", "Apellidos", "Nombres", "Dni", "Nro Historia", "Obs.Trat.", "Total Trata.", "Fecha Pago", "NÂ° Cuota", "Pago Ortodontico", "Pago Adicional", "Monto pago", "Comentarios"};
        modelo.setColumnIdentifiers(titulos);
        Object obj[] = new Object[modelo.getColumnCount()];

        for (int i = 0; i < pagos.size(); i++) {
            obj[0] = pagos.get(i).getIdPago();
            obj[1] = pagos.get(i).getTratamiento().getPaciente().getApellidos();
            obj[2] = pagos.get(i).getTratamiento().getPaciente().getNombres();
            obj[3] = pagos.get(i).getTratamiento().getPaciente().getDni();
            obj[4] = pagos.get(i).getTratamiento().getPaciente().getNroHistoria();
            obj[5] = pagos.get(i).getTratamiento().getComentarios();
            obj[6] = pagos.get(i).getTratamiento().getMontoTotalConDescuento();
            obj[7] = pagos.get(i).getFechaPago();
            obj[8] = pagos.get(i).getNroCuota();
            obj[9] = pagos.get(i).getPagoOrtodontico();
            obj[10] = pagos.get(i).getPagoAdicional();
            obj[11] = pagos.get(i).getMonto();
            obj[12] = pagos.get(i).getComentarios();

            modelo.addRow(obj);

        }

        tablePago.setModel(modelo);
        lblCantidadRegistros.setText("La cantidad de pagos es: " + String.valueOf(pagoDAO.cantidadRegistros));

    }

    public void limpiar() {
        txtIdPago.setText("");
        txtIdTratamiento.setText("");
        txtApellidosPa.setText("");
        txtNombresPa.setText("");
        txtDniPa.setText("");
        dateFechaPago.setDate(null);
        spnNroCuota.setValue((int) 0);
        txtMonto.setText("");
        txtComentarios.setText("");
        txtNroHistoria.setText("");
        txtPagoOrtodontico.setText("");
        txtPagoAdicional.setText("");

        txtBuscar.setText("");
        limpiarTabla(tableDetalleTrata);
    }
    
    public void limpiarGuardar(){
        
        txtIdPago.setText("");
        dateFechaPago.setDate(null);
        spnNroCuota.setValue((int) 0);
        txtMonto.setText("");
        txtComentarios.setText("");
        txtPagoOrtodontico.setText("");
        txtPagoAdicional.setText("");

        txtBuscar.setText("");
    
    }

    public void inhabilitar() {
        btnNuevo.setEnabled(true);
        dateFechaPago.setEnabled(false);
        spnNroCuota.setEnabled(false);
        txtMonto.setEnabled(false);
        txtComentarios.setEnabled(false);
        txtPagoOrtodontico.setEnabled(false);
        txtPagoAdicional.setEnabled(false);

        btnGuardar.setEnabled(false);
        btnModificar.setEnabled(true);
        btnCancelar.setEnabled(false);

    }

    public void habilitar() {
        dateFechaPago.setEnabled(true);
        spnNroCuota.setEnabled(true);
        txtMonto.setEnabled(true);
        txtComentarios.setEnabled(true);
        txtPagoOrtodontico.setEnabled(true);
        txtPagoAdicional.setEnabled(true);
        btnGuardar.setEnabled(true);
        btnNuevo.setEnabled(false);
        btnModificar.setEnabled(false);
        btnCancelar.setEnabled(true);

    }

    // BUSQUEDA FILTRO EN LA TABLA
    void busquedaFiltro() {

        {

            int opcionBuscar = 0;

            if (rbApellidos.isSelected()) {
                opcionBuscar = 1;
            } else if (rbNombres.isSelected()) {
                opcionBuscar = 2;
            } else if (rbDni.isSelected()) {
                opcionBuscar = 3;
            } else if (rbFechaPago.isSelected()) {
                opcionBuscar = 7;
            }

            trsFiltro.setRowFilter(RowFilter.regexFilter("(?i)" + txtBuscar.getText(), opcionBuscar));

        }
    }

    public void limpiarTabla(JTable tabla) {
        DefaultTableModel tb = (DefaultTableModel) tabla.getModel();
        int a = tabla.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            tb.removeRow(tb.getRowCount() - 1);
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        VerTratamiento = new javax.swing.JMenuItem();
        eliminarPago = new javax.swing.JMenuItem();
        tabPago = new javax.swing.JTabbedPane();
        panelBuscar = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        rbApellidos = new javax.swing.JRadioButton();
        rbNombres = new javax.swing.JRadioButton();
        rbDni = new javax.swing.JRadioButton();
        txtBuscar = new javax.swing.JTextField();
        rbFechaPago = new javax.swing.JRadioButton();
        btnReporte = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePago = new javax.swing.JTable();
        lblCantidadRegistros = new javax.swing.JLabel();
        panelNuevo = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblIdPago = new javax.swing.JLabel();
        txtIdPago = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btnBuscarTratamiento = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtApellidosPa = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNombresPa = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDniPa = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtNroHistoria = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableDetalleTrata = new javax.swing.JTable();
        lblIdTratamiento = new javax.swing.JLabel();
        txtIdTratamiento = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        txtMonto = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        dateFechaPago = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtComentarios = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        spnNroCuota = new javax.swing.JSpinner();
        lblDiaPago = new javax.swing.JLabel();
        txtDiaPago = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPagoOrtodontico = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtPagoAdicional = new javax.swing.JTextField();
        lblUltimaCuota = new javax.swing.JLabel();
        txtUltimaCuota = new javax.swing.JTextField();
        jToolBar1 = new javax.swing.JToolBar();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        VerTratamiento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Buscadetalle_p.png"))); // NOI18N
        VerTratamiento.setText("Ver Tratamiento");
        VerTratamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerTratamientoActionPerformed(evt);
            }
        });
        jPopupMenu1.add(VerTratamiento);

        eliminarPago.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/cancelar_p.png"))); // NOI18N
        eliminarPago.setText("Eliminar");
        eliminarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarPagoActionPerformed(evt);
            }
        });
        jPopupMenu1.add(eliminarPago);

        setClosable(true);
        setTitle("GestiÃ³n de Pagos de los Tratamientos de los Pacientes");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Criterios de busqueda"));

        buttonGroup1.add(rbApellidos);
        rbApellidos.setText("Apellidos");

        buttonGroup1.add(rbNombres);
        rbNombres.setText("Nombres");

        buttonGroup1.add(rbDni);
        rbDni.setText("Dni");

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        buttonGroup1.add(rbFechaPago);
        rbFechaPago.setText("Fecha pago");

        btnReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/report.png"))); // NOI18N
        btnReporte.setText("Reporte Pagos");
        btnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(rbApellidos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbNombres)
                        .addGap(14, 14, 14)
                        .addComponent(rbDni)
                        .addGap(10, 10, 10)
                        .addComponent(rbFechaPago)))
                .addGap(66, 66, 66)
                .addComponent(btnReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbApellidos)
                    .addComponent(rbNombres)
                    .addComponent(rbDni)
                    .addComponent(rbFechaPago))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btnReporte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tablePago = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        tablePago.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablePago.setComponentPopupMenu(jPopupMenu1);
        tablePago.setFocusable(false);
        tablePago.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePagoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablePago);

        lblCantidadRegistros.setText("lblCantidadRegistros");

        javax.swing.GroupLayout panelBuscarLayout = new javax.swing.GroupLayout(panelBuscar);
        panelBuscar.setLayout(panelBuscarLayout);
        panelBuscarLayout.setHorizontalGroup(
            panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscarLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 910, Short.MAX_VALUE)
                    .addComponent(lblCantidadRegistros)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(262, Short.MAX_VALUE))
        );
        panelBuscarLayout.setVerticalGroup(
            panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCantidadRegistros)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabPago.addTab("Buscar", panelBuscar);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Datos del tratamiento"));

        lblIdPago.setText("Id Pago :");

        txtIdPago.setEnabled(false);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Seleccionar Tratamiento del Paciente :"));

        btnBuscarTratamiento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Buscar_p.png"))); // NOI18N
        btnBuscarTratamiento.setText("Buscar Paciente");
        btnBuscarTratamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarTratamientoActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Datos del paciente :"));

        jLabel3.setText("Apellidos :");

        txtApellidosPa.setEnabled(false);

        jLabel4.setText("Nombres :");

        txtNombresPa.setEnabled(false);

        jLabel5.setText("Dni :");

        txtDniPa.setEnabled(false);

        jLabel1.setText("Nro Historia :");

        txtNroHistoria.setEditable(false);
        txtNroHistoria.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtApellidosPa, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombresPa, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDniPa, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNroHistoria, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtApellidosPa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtNombresPa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtDniPa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtNroHistoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detalles del Tratamiento :"));

        tableDetalleTrata.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Cantidad", "Piezas", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableDetalleTrata.setEnabled(false);
        jScrollPane2.setViewportView(tableDetalleTrata);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 894, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBuscarTratamiento)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(btnBuscarTratamiento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        lblIdTratamiento.setText("ID Tratamiento :");

        txtIdTratamiento.setEnabled(false);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del Registro del Pago :"));

        jLabel10.setText("Fecha Pago (*) :");

        jLabel16.setText("Monto Total (*) :");

        jLabel17.setText("Comentarios :");

        txtComentarios.setColumns(20);
        txtComentarios.setRows(5);
        jScrollPane3.setViewportView(txtComentarios);

        jLabel11.setText("NÂ° Cuota");

        spnNroCuota.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnNroCuotaStateChanged(evt);
            }
        });
        spnNroCuota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                spnNroCuotaKeyPressed(evt);
            }
        });

        lblDiaPago.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDiaPago.setText("Dia Pago :");

        txtDiaPago.setEditable(false);
        txtDiaPago.setEnabled(false);

        jLabel6.setText("Pago Ortodontico :");

        txtPagoOrtodontico.setText("0");
        txtPagoOrtodontico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPagoOrtodonticoKeyPressed(evt);
            }
        });

        jLabel8.setText("Pago Adicional :");

        txtPagoAdicional.setText("0");
        txtPagoAdicional.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPagoAdicionalKeyPressed(evt);
            }
        });

        lblUltimaCuota.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblUltimaCuota.setText("Ultima Cuota pagada :");

        txtUltimaCuota.setEditable(false);
        txtUltimaCuota.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel16)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dateFechaPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtMonto, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                    .addComponent(txtPagoOrtodontico)
                    .addComponent(txtPagoAdicional))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spnNroCuota)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblDiaPago)
                    .addComponent(lblUltimaCuota))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDiaPago)
                    .addComponent(txtUltimaCuota, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(185, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUltimaCuota)
                            .addComponent(txtUltimaCuota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDiaPago)
                            .addComponent(txtDiaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(spnNroCuota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addGap(0, 56, Short.MAX_VALUE))))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(dateFechaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtPagoOrtodontico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txtPagoAdicional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(28, 28, 28))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblIdTratamiento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIdTratamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblIdPago)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIdPago, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(128, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdTratamiento)
                    .addComponent(txtIdTratamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIdPago)
                    .addComponent(txtIdPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout panelNuevoLayout = new javax.swing.GroupLayout(panelNuevo);
        panelNuevo.setLayout(panelNuevoLayout);
        panelNuevoLayout.setHorizontalGroup(
            panelNuevoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNuevoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelNuevoLayout.setVerticalGroup(
            panelNuevoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNuevoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabPago.addTab("Nuevo/Modificar", panelNuevo);

        jToolBar1.setRollover(true);

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/page_add.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.setToolTipText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNuevo);

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/page_save.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setToolTipText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnGuardar);

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/page_edit.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setToolTipText("Editar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnModificar);

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/page_delete.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setToolTipText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCancelar);

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/principal.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setToolTipText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSalir);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabPago, javax.swing.GroupLayout.PREFERRED_SIZE, 1195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabPago, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        txtBuscar.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(final KeyEvent e) {
                String cadena = (txtBuscar.getText());
                txtBuscar.setText(cadena);
                repaint();
                busquedaFiltro();
            }
        });
        trsFiltro = new TableRowSorter(tablePago.getModel());
        tablePago.setRowSorter(trsFiltro);
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void tablePagoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePagoMouseClicked
        limpiarTabla(tableDetalleTrata);
        int fila;
        DefaultTableModel defaultTableModel = new DefaultTableModel();
        fila = tablePago.convertRowIndexToModel(tablePago.getSelectedRow());

        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "Se debe seleccionar un registro");
        } else {
            defaultTableModel = (DefaultTableModel) tablePago.getModel();
            Pago pago = new Pago();
            int idPago = Integer.parseInt(defaultTableModel.getValueAt(fila, 0).toString());
            pago = pagoDAO.listarPagoPorId(idPago);
            txtIdPago.setText(defaultTableModel.getValueAt(fila, 0).toString());
            txtIdTratamiento.setText(pago.getTratamiento().getIdTratamiento().toString());
            txtApellidosPa.setText(pago.getTratamiento().getPaciente().getApellidos());
            txtNombresPa.setText(pago.getTratamiento().getPaciente().getNombres());
            txtDniPa.setText(pago.getTratamiento().getPaciente().getDni());
            txtNroHistoria.setText(pago.getTratamiento().getPaciente().getNroHistoria());
            //enviar datos a la tabla detalle de tratamiento
            List<TratamientoDetalle> tratamientoDetalles = new ArrayList<>();
            TratamientoDAO tratamientoDAO = new TratamientoDAO();
            tratamientoDetalles = tratamientoDAO.buscarProcedimientosPorTratamiento(pago.getTratamiento().getIdTratamiento());

            DefaultTableModel modelo = (DefaultTableModel) tableDetalleTrata.getModel();
            Object obj[] = new Object[4];
            for (int i = 0; i < tratamientoDetalles.size(); i++) {
                obj[0] = tratamientoDetalles.get(i).getProcedimiento().getNombre();
                obj[1] = tratamientoDetalles.get(i).getCantidad();
                obj[2] = tratamientoDetalles.get(i).getPiezas();
                obj[3] = tratamientoDetalles.get(i).getPrecio();

                modelo.addRow(obj);

            }
            tableDetalleTrata.setModel(modelo);

            dateFechaPago.setDate(pago.getFechaPago());
            spnNroCuota.setValue((int) pago.getNroCuota());
            txtMonto.setText(String.valueOf(pago.getMonto()));
            txtComentarios.setText(pago.getComentarios());
            txtPagoOrtodontico.setText(String.valueOf(pago.getPagoOrtodontico()));
            txtPagoAdicional.setText(String.valueOf(pago.getPagoAdicional()));

        }
    }//GEN-LAST:event_tablePagoMouseClicked

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        accion = "Nuevo";
        limpiar();
        habilitar();
        tabPago.setSelectedIndex(tabPago.indexOfComponent(panelNuevo));

    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (dateFechaPago.getDate() == null || txtMonto.getText().equals("") || txtIdTratamiento.getText().equals("") ) {
            JOptionPane.showMessageDialog(this, "Debes de ingresar los campos (*) obligatorios");
        } else {
            Tratamiento t = new Tratamiento();
            t.setIdTratamiento(Integer.parseInt(txtIdTratamiento.getText()));
            pago.setTratamiento(t);
            pago.setFechaPago(dateFechaPago.getDate());
            pago.setNroCuota(((int) spnNroCuota.getValue()));
            pago.setMonto(Double.parseDouble(txtMonto.getText()));
            pago.setComentarios(txtComentarios.getText());
            if(txtPagoOrtodontico.getText().equals(""))
            {
            pago.setPagoOrtodontico(0);
            }
            else
            {pago.setPagoOrtodontico(Double.parseDouble(txtPagoOrtodontico.getText()));
            }
            if(txtPagoAdicional.getText().equals(""))
            {
            pago.setPagoAdicional(0);
            }
            else
            {
            pago.setPagoAdicional(Double.parseDouble(txtPagoAdicional.getText()));
            }
            if (accion.equals("Nuevo")) {
                pagoDAO.insertar(pago);
                JOptionPane.showMessageDialog(null, "El pago fue registrado correctamente");

            } else if (accion.equals("Modificar")) {
                pago.setIdPago(Integer.parseInt(txtIdPago.getText()));
                pagoDAO.modificar(pago);
                JOptionPane.showMessageDialog(null, "El pago fue actualizado correctamente");

            }
            mostrar();
            limpiarGuardar();
            //inhabilitar();
            //tabPago.setSelectedIndex(tabPago.indexOfComponent(panelBuscar));
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if (tablePago.getSelectedRows().length > 0) {
            accion = "Modificar";
            habilitar();
            tabPago.setSelectedIndex(tabPago.indexOfComponent(panelNuevo));
        } else {
            JOptionPane.showMessageDialog(null, "Â¡Se debe seleccionar un registro!");
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        inhabilitar();
        limpiar();

        tabPago.setSelectedIndex(tabPago.indexOfComponent(panelBuscar));
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        limpiarTabla(tableDetalleTrata);
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnBuscarTratamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarTratamientoActionPerformed
        DialogTratamientos.llamado = "pagos";
        DialogTratamientos dialogTratamientos = new DialogTratamientos(null, closable);
        dialogTratamientos.show();
    }//GEN-LAST:event_btnBuscarTratamientoActionPerformed

    private void spnNroCuotaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spnNroCuotaKeyPressed
        spnNroCuota.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(final KeyEvent e) {
                if ((int) spnNroCuota.getValue() != 0) {
                    lblDiaPago.setVisible(true);
                    txtDiaPago.setVisible(true);
                }
            }

        });

    }//GEN-LAST:event_spnNroCuotaKeyPressed

    private void txtPagoOrtodonticoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPagoOrtodonticoKeyPressed
        txtPagoOrtodontico.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(final KeyEvent e) {
                double pagoOrto;
                double pagoAdicional;
                if (txtPagoOrtodontico.getText().equals("") || txtPagoOrtodontico.getText() == null) {
                    pagoOrto = 0;
                } else {
                    pagoOrto = Double.parseDouble(txtPagoOrtodontico.getText());
                }

                if (txtPagoAdicional.getText().equals("") || txtPagoAdicional.getText() == null) {
                    pagoAdicional = 0;
                } else {
                    pagoAdicional = Double.parseDouble(txtPagoAdicional.getText());
                }

                txtMonto.setText(String.valueOf(pagoOrto + pagoAdicional));
            }

        });
    }//GEN-LAST:event_txtPagoOrtodonticoKeyPressed

    private void txtPagoAdicionalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPagoAdicionalKeyPressed
        txtPagoAdicional.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(final KeyEvent e) {
                double pagoOrto;
                double pagoAdicional;
                if (txtPagoOrtodontico.getText().equals("") || txtPagoOrtodontico.getText() == null) {
                    pagoOrto = 0;
                } else {
                    pagoOrto = Double.parseDouble(txtPagoOrtodontico.getText());
                }

                if (txtPagoAdicional.getText().equals("") || txtPagoAdicional.getText() == null) {
                    pagoAdicional = 0;
                } else {
                    pagoAdicional = Double.parseDouble(txtPagoAdicional.getText());
                }

                txtMonto.setText(String.valueOf(pagoOrto + pagoAdicional));
            }

        });
    }//GEN-LAST:event_txtPagoAdicionalKeyPressed

    private void spnNroCuotaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnNroCuotaStateChanged
        if (txtIdTratamiento.getText().equals("") || txtIdTratamiento.getText() == null) {
            lblDiaPago.setVisible(false);
            txtDiaPago.setVisible(false);
        } else {
            TratamientoDAO t = new TratamientoDAO();
            Tratamiento tra = new Tratamiento();
            tra = t.listarTratamientoPorId(Integer.parseInt(txtIdTratamiento.getText()));
            int diaPagar = tra.getDiaPagar();
            int ultimaCuota = pagoDAO.obtenerUltimaCuota(Integer.parseInt(txtIdTratamiento.getText()));
            txtDiaPago.setText(String.valueOf(diaPagar));
            txtUltimaCuota.setText(String.valueOf(ultimaCuota));
            lblDiaPago.setVisible(true);
            txtDiaPago.setVisible(true);
            lblUltimaCuota.setVisible(true);
            txtUltimaCuota.setVisible(true);
            
        }

    }//GEN-LAST:event_spnNroCuotaStateChanged

    private void VerTratamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerTratamientoActionPerformed
      if(!txtIdTratamiento.getText().equals(""))
      {
       int idTratamiento = Integer.parseInt(txtIdTratamiento.getText());
       DialogInfoTratamiento.IDTRATAMIENTO = idTratamiento;
       DialogInfoTratamiento dialogInfoTratamiento = new DialogInfoTratamiento(null, closable);
       dialogInfoTratamiento.setLocationRelativeTo(null);
       dialogInfoTratamiento.show();
      }
      else
      {
           JOptionPane.showMessageDialog(null, "Debes de seleccionar la fila para ver su tratamiento","ADVERTENCIA",JOptionPane.WARNING_MESSAGE);
      }
    }//GEN-LAST:event_VerTratamientoActionPerformed

    private void btnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteActionPerformed
        int fila = tablePago.convertRowIndexToModel(tablePago.getSelectedRow());
        if(fila == -1)
        {
            JOptionPane.showMessageDialog(null, "Debes de seleccionar un paciente","ADVERTENCIA",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
         List<Pago> pagos = new ArrayList<>();
       pagos = pagoDAO.listarPagosPorTratamiento(Integer.parseInt(txtIdTratamiento.getText()));
       Pago pago = pagoDAO.listarPagoPorId(Integer.parseInt(txtIdPago.getText()));
       List<PagosPacienteDTO> pagosPacienteDTOs = new ArrayList<>();
       
       double total = 0;
       double saldo = 0;
       double montoPagar = pago.getTratamiento().getMontoTotalConDescuento();
       
       for(Pago p:pagos)
       { 
          PagosPacienteDTO pa = new PagosPacienteDTO();
          SimpleDateFormat sd = new SimpleDateFormat("dd 'de' MMMM 'de' yyyy", new Locale("ES"));
            String fecha = sd.format(p.getFechaPago());
           pa.setFechaPago(fecha);
           pa.setMontoTotal(String.valueOf(p.getMonto()));
           pa.setComentarios(p.getComentarios());
           total = total + p.getMonto();
           pagosPacienteDTOs.add(pa);
           
       }
       
       saldo = montoPagar - total;

        Map p = new HashMap();
        p.put("apellidos", txtApellidosPa.getText());
        p.put("nombres", txtNombresPa.getText());
        p.put("totalTratamiento", String.valueOf(montoPagar));
        p.put("nroHistoria", txtNroHistoria.getText());
        p.put("total",String.valueOf(total));
        p.put("saldo",String.valueOf(saldo));

        String logo = "/imagenes/diamante.png";
        p.put("logo", this.getClass().getResourceAsStream(logo));
        JasperReport report;
        JasperPrint print;

        try {

            URL url = this.getClass().getResource("/reportes/RptPagosPaciente.jasper");
            report = (JasperReport) JRLoader.loadObject(url);
            //report = JasperCompileManager.compileReport(new File("").getAbsolutePath()+"\\src\\reportes\\RptContratoTratamiento.jrxml");
            print = JasperFillManager.fillReport(report, p, new JRBeanCollectionDataSource(pagosPacienteDTOs));
            JasperViewer view = new JasperViewer(print, false);
            //jasperviewer como dialog
            view.setTitle("PAGOS DEL PACIENTE");
            view.setVisible(true);

        } catch (JRException e) {
            e.printStackTrace();
        }
        }
    }//GEN-LAST:event_btnReporteActionPerformed

    private void eliminarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarPagoActionPerformed
         DefaultTableModel defaultTableModel = (DefaultTableModel) tablePago.getModel();
       int fila = tablePago.convertRowIndexToModel(tablePago.getSelectedRow());
       if(fila == -1)
       {
           JOptionPane.showMessageDialog(null,"Selecciona una fila para eliminar");
       }
       else
       {
        int idPago = Integer.parseInt(defaultTableModel.getValueAt(fila,0).toString());
        int confirmar = JOptionPane.showConfirmDialog(null,
                    "Esta seguro que desea eliminar el pago? ");

            if (JOptionPane.OK_OPTION == confirmar) {
              pagoDAO.eliminarPago(idPago);
                JOptionPane.showMessageDialog(null, "Pago Eliminado");
                
                mostrar();
            }
       }
    }//GEN-LAST:event_eliminarPagoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem VerTratamiento;
    private javax.swing.JButton btnBuscarTratamiento;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnReporte;
    private javax.swing.JButton btnSalir;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser dateFechaPago;
    private javax.swing.JMenuItem eliminarPago;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblCantidadRegistros;
    private javax.swing.JLabel lblDiaPago;
    private javax.swing.JLabel lblIdPago;
    private javax.swing.JLabel lblIdTratamiento;
    private javax.swing.JLabel lblUltimaCuota;
    private javax.swing.JPanel panelBuscar;
    private javax.swing.JPanel panelNuevo;
    private javax.swing.JRadioButton rbApellidos;
    private javax.swing.JRadioButton rbDni;
    private javax.swing.JRadioButton rbFechaPago;
    private javax.swing.JRadioButton rbNombres;
    private javax.swing.JSpinner spnNroCuota;
    private javax.swing.JTabbedPane tabPago;
    public static javax.swing.JTable tableDetalleTrata;
    private javax.swing.JTable tablePago;
    public static javax.swing.JTextField txtApellidosPa;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextArea txtComentarios;
    private javax.swing.JTextField txtDiaPago;
    public static javax.swing.JTextField txtDniPa;
    private javax.swing.JTextField txtIdPago;
    public static javax.swing.JTextField txtIdTratamiento;
    private javax.swing.JTextField txtMonto;
    public static javax.swing.JTextField txtNombresPa;
    public static javax.swing.JTextField txtNroHistoria;
    private javax.swing.JTextField txtPagoAdicional;
    private javax.swing.JTextField txtPagoOrtodontico;
    private javax.swing.JTextField txtUltimaCuota;
    // End of variables declaration//GEN-END:variables
}
